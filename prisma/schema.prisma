generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model enrollments {
  id                    Int       @id @default(autoincrement())
  identity_number       String
  name                  String
  gender                Gender?
  photo                 Bytes
  driver_license_number String?
  passport_number       String?
  created_at            DateTime  @default(now())
  modified_at           DateTime?
  deleted_at            DateTime?
}

model enrolled_ids {
  id         String   @id
  image      Bytes
  ktp_image  Bytes
  email      String
  name       String
  birth_date DateTime @db.Date
  phone_num  String
  created_at DateTime @default(now())
  skck_requests   skck_requests[]
}

model skck_requests {
  id         Int      @id @default(autoincrement())
  user_id    String
  progress   SKCKProgress  @default(IN_PROGRESS)
  created_at DateTime @default(now())

  user enrolled_ids @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "api_key_scopes_ibfk_1")
}

model api_hit_logs {
  id           Int      @id @default(autoincrement())
  api_key_id   Int
  api_accessed ApiType
  created_at   DateTime @default(now())

  api_key api_keys @relation(fields: [api_key_id], references: [id], onUpdate: Restrict, map: "api_hit_logs_ibfk_1")
}

model api_keys {
  id          Int       @id @default(autoincrement())
  name        String
  key         String    @unique(map: "key")
  active      Boolean   @default(true)
  created_at  DateTime  @default(now())
  modified_at DateTime?
  deleted_at  DateTime?

  api_hit_logs   api_hit_logs[]
  api_key_scopes api_key_scopes[]
}

model api_key_scopes {
  id         Int      @id @default(autoincrement())
  api_key_id Int
  scope      ApiType
  created_at DateTime @default(now())

  api_key api_keys @relation(fields: [api_key_id], references: [id], onUpdate: Restrict, map: "api_key_scopes_ibfk_1")
}

enum SKCKProgress {
  IN_PROGRESS
}

enum Gender {
  MALE
  FEMALE
}

enum ApiType {
  DIVTIK
  SIM
  IMIGRASI
  DPO_BARESKRIM
  INTERPOL
  FACE_ENROLLMENT
  FACE_MATCH
  FACE_DETECTION
}
